@tailwind base;
@tailwind components;
@tailwind utilities;

/* LIGHT MODE */
:root {
  /* Base font size: roughly Slack-like, one step larger */
  font-size: 17px; /* was ~16px by default */
  --button-outline: rgba(0,0,0, .10);
  --badge-outline: rgba(0,0,0, .05);

  /* Automatic computation of border around primary / danger buttons */
  --opaque-button-border-intensity: -8; /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(0,0,0, .03);
  --elevate-2: rgba(0,0,0, .08);

  --background: 40 14% 90%;

  --foreground: 220 13% 18%;

  --border: 210 9% 80%;

  --card: 210 17% 98%;

  --card-foreground: 220 13% 18%;

  --card-border: 210 9% 80%;

  --sidebar: 210 17% 98%;

  --sidebar-foreground: 220 13% 18%;

  --sidebar-border: 210 9% 80%;

  --sidebar-primary: 220 85% 55%;

  --sidebar-primary-foreground: 0 0% 98%;

  --sidebar-accent: 220 8% 92%;

  --sidebar-accent-foreground: 220 13% 18%;

  --sidebar-ring: 220 85% 55%;

  --popover: 210 17% 98%;

  --popover-foreground: 220 13% 18%;

  --popover-border: 210 9% 80%;

  --primary: 220 85% 55%;

  --primary-foreground: 0 0% 98%;

  --secondary: 210 17% 98%;

  --secondary-foreground: 220 13% 18%;

  --muted: 210 17% 96%;

  --muted-foreground: 220 9% 46%;

  --accent: 210 17% 95%;

  --accent-foreground: 220 13% 18%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 0 0% 98%;

  --input: 210 9% 85%;
  --ring: 220 85% 55%;
  --chart-1: 220 85% 55%;
  --chart-2: 142 70% 45%;
  --chart-3: 38 92% 50%;
  --chart-4: 271 81% 56%;
  --chart-5: 0 84% 60%;

  --font-sans: Open Sans, sans-serif;
  --font-serif: Georgia, serif;
  --font-mono: Menlo, monospace;
  --radius: .5rem; /* 8px */
  --shadow-2xs: 0px 2px 0px 0px hsl(220 9% 88% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(220 9% 88% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(220 9% 88% / 0.00), 0px 1px 2px -1px hsl(220 9% 88% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(220 9% 88% / 0.00), 0px 1px 2px -1px hsl(220 9% 88% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(220 9% 88% / 0.00), 0px 2px 4px -1px hsl(220 9% 88% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(220 9% 88% / 0.00), 0px 4px 6px -1px hsl(220 9% 88% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(220 9% 88% / 0.00), 0px 8px 10px -1px hsl(220 9% 88% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(220 9% 88% / 0.00);
  --tracking-normal: 0em;
  --spacing: 0.25rem;

  /* Automatically computed borders - intensity can be controlled by the user by the --opaque-button-border-intensity setting */

  /* Fallback for older browsers */
  --sidebar-primary-border: hsl(var(--sidebar-primary));
  --sidebar-primary-border: hsl(from hsl(var(--sidebar-primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --sidebar-accent-border: hsl(var(--sidebar-accent));
  --sidebar-accent-border: hsl(from hsl(var(--sidebar-accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --primary-border: hsl(var(--primary));
  --primary-border: hsl(from hsl(var(--primary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --secondary-border: hsl(var(--secondary));
  --secondary-border: hsl(from hsl(var(--secondary)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --muted-border: hsl(var(--muted));
  --muted-border: hsl(from hsl(var(--muted)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --accent-border: hsl(var(--accent));
  --accent-border: hsl(from hsl(var(--accent)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);

  /* Fallback for older browsers */
  --destructive-border: hsl(var(--destructive));
  --destructive-border: hsl(from hsl(var(--destructive)) h s calc(l + var(--opaque-button-border-intensity)) / alpha);
  /* Scrollbar colors (light mode) */
  --scrollbar-bg: hsl(210 17% 98%);
  --scrollbar-thumb: hsl(210 9% 80%);
  --scrollbar-thumb-hover: hsl(210 9% 72%);
}

.dark {
  --button-outline: rgba(255,255,255, .10);
  --badge-outline: rgba(255,255,255, .05);

  --opaque-button-border-intensity: 9;  /* In terms of percentages */

  /* Backgrounds applied on top of other backgrounds when hovered/active */
  --elevate-1: rgba(255,255,255, .04);
  --elevate-2: rgba(255,255,255, .09);

  --background: 220 13% 9%;

  --foreground: 220 9% 92%;

  --border: 220 13% 18%;

  --card: 220 13% 14%;

  --card-foreground: 220 9% 92%;

  --card-border: 220 13% 20%;

  --sidebar: 220 13% 11%;

  --sidebar-foreground: 220 9% 92%;

  --sidebar-border: 220 13% 16%;

  --sidebar-primary: 220 85% 60%;

  --sidebar-primary-foreground: 220 9% 92%;

  --sidebar-accent: 220 13% 18%;

  --sidebar-accent-foreground: 220 9% 92%;

  --sidebar-ring: 220 85% 60%;

  --popover: 220 13% 16%;

  --popover-foreground: 220 9% 92%;

  --popover-border: 220 13% 22%;

  --primary: 220 85% 60%;

  --primary-foreground: 220 9% 92%;

  --secondary: 220 13% 20%;

  --secondary-foreground: 220 9% 92%;

  --muted: 220 13% 18%;

  --muted-foreground: 220 9% 65%;

  --accent: 220 13% 18%;

  --accent-foreground: 220 9% 92%;

  --destructive: 0 84% 60%;

  --destructive-foreground: 220 9% 92%;

  --input: 220 13% 25%;
  --ring: 220 85% 60%;
  --chart-1: 220 85% 65%;
  --chart-2: 142 70% 55%;
  --chart-3: 38 92% 55%;
  --chart-4: 271 81% 66%;
  --chart-5: 0 84% 65%;

  --shadow-2xs: 0px 2px 0px 0px hsl(220 13% 9% / 0.00);
  --shadow-xs: 0px 2px 0px 0px hsl(220 13% 9% / 0.00);
  --shadow-sm: 0px 2px 0px 0px hsl(220 13% 9% / 0.00), 0px 1px 2px -1px hsl(220 13% 9% / 0.00);
  --shadow: 0px 2px 0px 0px hsl(220 13% 9% / 0.00), 0px 1px 2px -1px hsl(220 13% 9% / 0.00);
  --shadow-md: 0px 2px 0px 0px hsl(220 13% 9% / 0.00), 0px 2px 4px -1px hsl(220 13% 9% / 0.00);
  --shadow-lg: 0px 2px 0px 0px hsl(220 13% 9% / 0.00), 0px 4px 6px -1px hsl(220 13% 9% / 0.00);
  --shadow-xl: 0px 2px 0px 0px hsl(220 13% 9% / 0.00), 0px 8px 10px -1px hsl(220 13% 9% / 0.00);
  --shadow-2xl: 0px 2px 0px 0px hsl(220 13% 9% / 0.00);

}

/* Scrollbar styles (cross-browser) */
/* WebKit-based browsers */
*::-webkit-scrollbar {
  width: 12px;
  height: 12px;
}

*::-webkit-scrollbar-track {
  background: color-mix(in srgb, var(--scrollbar-bg) 100%, transparent);
}

*::-webkit-scrollbar-thumb {
  background-color: var(--scrollbar-thumb);
  border-radius: 9999px;
  border: 3px solid transparent; /* creates padding so thumb doesn't touch edge */
  background-clip: padding-box;
}

*::-webkit-scrollbar-thumb:hover {
  background-color: var(--scrollbar-thumb-hover);
}

/* Firefox */
* {
  scrollbar-width: thin;
  scrollbar-color: var(--scrollbar-thumb) var(--scrollbar-bg);
}

/* Dark mode overrides for scrollbars */
.dark {
  --scrollbar-bg: hsl(220 13% 11%);
  --scrollbar-thumb: hsl(220 13% 22%);
  --scrollbar-thumb-hover: hsl(220 13% 28%);
}

@layer base {
  * {
    @apply border-border;
  }

  body {
    @apply font-sans antialiased bg-background text-foreground;
  }
}

/**
 * Using the elevate system.
 * Automatic contrast adjustment.
 *
 * <element className="hover-elevate" />
 * <element className="active-elevate-2" />
 *
 * // Using the tailwind utility when a data attribute is "on"
 * <element className="toggle-elevate data-[state=on]:toggle-elevated" />
 * // Or manually controlling the toggle state
 * <element className="toggle-elevate toggle-elevated" />
 *
 * Elevation systems have to handle many states.
 * - not-hovered, vs. hovered vs. active  (three mutually exclusive states)
 * - toggled or not
 * - focused or not (this is not handled with these utilities)
 *
 * Even without handling focused or not, this is six possible combinations that
 * need to be distinguished from eachother visually.
 */
@layer utilities {

  /* nprogress like bar */
  #nprogress {
    pointer-events: none;
  }
  #nprogress .bar {
    background: #FF7759;
    position: fixed;
    z-index: 9999;
    top: 0;
    left: 0;
    width: 100%;
    height: 3px;
  }
  #nprogress .peg {
    display: block;
    position: absolute;
    right: 0px;
    width: 100px;
    height: 100%;
    box-shadow: 0 0 10px #FF7759, 0 0 5px #FF7759;
    opacity: 1;
    transform: rotate(3deg) translate(0px, -4px);
  }

  /* Sidebar collapsed behavior similar to sample */
  #sidebar.collapsed {
    width: 5rem; /* 80px */
  }
  #sidebar.collapsed .sidebar-text,
  #sidebar.collapsed .section-toggle {
    display: none;
  }
  #sidebar.collapsed .sidebar-link {
    justify-content: center;
  }
  #sidebar.collapsed .sidebar-link > svg {
    margin-left: 0 !important;
  }


  /* Hide ugly search cancel button in Chrome until we can style it properly */
  input[type="search"]::-webkit-search-cancel-button {
    @apply hidden;
  }

  /* Placeholder styling for contentEditable div */
  [contenteditable][data-placeholder]:empty::before {
    content: attr(data-placeholder);
    color: hsl(var(--muted-foreground));
    pointer-events: none;
  }

  /* .no-default-hover-elevate/no-default-active-elevate is an escape hatch so consumers of
   * buttons/badges can remove the automatic brightness adjustment on interactions
   * and program their own. */
  .no-default-hover-elevate {}

  .no-default-active-elevate {}


  /**
   * Toggleable backgrounds go behind the content. Hoverable/active goes on top.
   * This way they can stack/compound. Both will overlap the parent's borders!
   * So borders will be automatically adjusted both on toggle, and hover/active,
   * and they will be compounded.
   */
  .toggle-elevate::before,
  .toggle-elevate-2::before {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: -1;
    /* sits behind content but above backdrop */
  }

  .toggle-elevate.toggle-elevated::before {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.toggle-elevate::before {
    inset: -1px;
  }

  /* Does not work on elements with overflow:hidden! */
  .hover-elevate:not(.no-default-hover-elevate),
  .active-elevate:not(.no-default-active-elevate),
  .hover-elevate-2:not(.no-default-hover-elevate),
  .active-elevate-2:not(.no-default-active-elevate) {
    position: relative;
    z-index: 0;
  }

  .hover-elevate:not(.no-default-hover-elevate)::after,
  .active-elevate:not(.no-default-active-elevate)::after,
  .hover-elevate-2:not(.no-default-hover-elevate)::after,
  .active-elevate-2:not(.no-default-active-elevate)::after {
    content: "";
    pointer-events: none;
    position: absolute;
    inset: 0px;
    /*border-radius: inherit;   match rounded corners */
    border-radius: inherit;
    z-index: 999;
    /* sits in front of content */
  }

  .hover-elevate:hover:not(.no-default-hover-elevate)::after,
  .active-elevate:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-1);
  }

  .hover-elevate-2:hover:not(.no-default-hover-elevate)::after,
  .active-elevate-2:active:not(.no-default-active-elevate)::after {
    background-color: var(--elevate-2);
  }

  /* If there's a 1px border, adjust the inset so that it covers that parent's border */
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate-2:not(.no-hover-interaction-elevate)::after,
  .border.active-elevate-2:not(.no-active-interaction-elevate)::after,
  .border.hover-elevate:not(.no-hover-interaction-elevate)::after {
    inset: -1px;
  }
}
*:focus,
*:focus-visible {
  outline: none !important;
  box-shadow: none !important;
}

/* Autofill overrides only applied in dark mode - keep light mode visuals unchanged */
.dark input:-webkit-autofill,
.dark textarea:-webkit-autofill,
.dark select:-webkit-autofill {
  -webkit-box-shadow: 0 0 0 1000px hsl(var(--input)) inset !important;
          box-shadow: 0 0 0 1000px hsl(var(--input)) inset !important;
  -webkit-text-fill-color: hsl(var(--card-foreground)) !important;
  transition: background-color 5000s ease-in-out 0s !important;
}

/* Focused / active autofill state (dark only) */
.dark input:-webkit-autofill:focus,
.dark textarea:-webkit-autofill:focus,
.dark select:-webkit-autofill:focus {
  -webkit-box-shadow: 0 0 0 1000px hsl(var(--input)) inset !important;
          box-shadow: 0 0 0 1000px hsl(var(--input)) inset !important;
  -webkit-text-fill-color: hsl(var(--card-foreground)) !important;
}

/* Firefox doesn't expose a dedicated autofill pseudo, but ensure form controls
   inherit colors so they don't contrast badly in dark mode */
input,
textarea,
select {
  color: inherit;
  background-color: transparent;
}

/* Stronger, class-scoped autofill override for our Input component */
/* Class-scoped strong override (dark only) */
.dark .autofill-fix:-webkit-autofill,
.dark .autofill-fix:-webkit-autofill:hover,
.dark .autofill-fix:-webkit-autofill:focus,
.dark .autofill-fix:-webkit-autofill:active {
  -webkit-box-shadow: 0 0 0 1000px hsl(var(--input)) inset !important;
          box-shadow: 0 0 0 1000px hsl(var(--input)) inset !important;
  -webkit-text-fill-color: hsl(var(--card-foreground)) !important;
  caret-color: auto;
  transition: background-color 5000s ease-in-out 0s !important;
}

/* Additional selectors to broaden coverage for Safari/Chromium variants */
/* Additional selectors to broaden coverage for Safari/Chromium variants (dark only) */
.dark .autofill-fix::-webkit-textfield-decoration-container,
.dark .autofill-fix::-webkit-autofill,
.dark .autofill-fix::-webkit-autofill:hover,
.dark .autofill-fix::-webkit-autofill:focus {
  -webkit-box-shadow: 0 0 0 1000px hsl(var(--input)) inset !important;
          box-shadow: 0 0 0 1000px hsl(var(--input)) inset !important;
  -webkit-text-fill-color: hsl(var(--card-foreground)) !important;
}

/* Firefox autofill pseudo-class (dark only) */
.dark .autofill-fix:-moz-autofill,
.dark input:-moz-autofill,
.dark textarea:-moz-autofill,
.dark select:-moz-autofill {
  box-shadow: 0 0 0 1000px hsl(var(--input)) inset !important;
  -moz-text-fill-color: hsl(var(--card-foreground)) !important;
}

/*
 * Custom focus styles for keyboard navigation accessibility.
 * Provide visible focus indicators while maintaining design consistency.
 */
*:focus-visible {
  outline: 2px solid hsl(var(--ring));
  outline-offset: 2px;
}

/* Hide focus outline for mouse users only */
*:focus:not(:focus-visible) {
  outline: none;
}
